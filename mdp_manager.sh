#!/bin/bash

FICHIER_ENC="password_manager.txt.enc"

# Fichier temporaire d√©chiffr√© (pour pouvoir le modifier/consulter)
TMPFILE=$(mktemp)

# V√©rifie si le mot de passe respecte les crit√®res (minimum 8 caract√®res)
force_password() {
    local password=$1
    
    if [ ${#password} -lt 8 ]; then
        echo "Mot de passe de 8 caract√®res minimum"
        return 1
    fi
    
    return 0
}

# G√©n√®re un mot de passe al√©atoire de 12 caract√®res
mot_passe_random() {
    < /dev/urandom tr -dc 'A-Za-z0-9_@#%' | head -c 12
    return 0
}

# V√©rifie si le fichier chiffr√© existe
if [ ! -f "$FICHIER_ENC" ]; then
    echo "Aucun fichier chiffr√© trouv√©."
    echo "Cr√©ation initiale du fichier 'password_manager.txt'."
    echo -n

    # Demande √† l'utilisateur de choisir un mot de passe ma√Ætre
    echo "Souhaitez-vous choisir votre mot de passe ?"
    echo "1. Mot de passe personnalis√©"
    echo "2. G√©n√©rer un mot de passe al√©atoire"
    read -p "Entrez 1 ou 2 : " choix
    echo

    if [[ "$choix" == "1" ]]; then
        # Mot de passe personnalis√©
        echo -n "Cr√©e ton mot de passe ma√Ætre : "
        read -s MDP1
        
        # V√©rifie si le mot de passe respecte les crit√®res
        if ! force_password "$MDP1"; then
            exit 1
        fi
        
        echo
        echo -n "Confirme ton mot de passe : "
        read -s MDP2
        echo

        # V√©rifie si les deux mots de passe correspondent
        if [ "$MDP1" != "$MDP2" ]; then
            echo "Mots de passe diff√©rents"
            exit 1
        fi
        
    elif [[ "$choix" == "2" ]]; then
        # G√©n√®re un mot de passe al√©atoire
        MDP1=$(mot_passe_random)
        echo "Mot de passe g√©n√©r√© : $MDP1"
        
        # Demande confirmation pour valider le mot de passe g√©n√©r√©
        read -p "Voulez-vous valider ce mot de passe (Yes/No) ? " validation

        if [[ "$validation" == "Yes" || "$validation" == "yes" ]]; then
            echo "Mot de passe valid√©."
        elif [[ "$validation" == "No" || "$validation" == "no" ]]; then 
            exit 1
        fi
        
    else
        echo "Choix invalide. Veuillez entrer 1 ou 2."
        exit 1
    fi
    
    # Cr√©e le fichier chiffr√© avec le mot de passe ma√Ætre
    openssl enc -aes-256-cbc -pbkdf2 -salt -in "$TMPFILE" -out "$FICHIER_ENC" -pass pass:"$MDP1"
    shred -u "$TMPFILE"  # Supprime le fichier temporaire de mani√®re s√©curis√©e
    echo "Fichier chiffr√© cr√©√© avec succ√®s : $FICHIER_ENC"
    exit 0
fi

# === UTILISATION NORMALE ===

# Demande le mot de passe ma√Ætre pour d√©chiffrer le fichier
echo -n "Mot de passe ma√Ætre : "
read -s MDP
echo

# D√©chiffre le fichier chiffr√© dans un fichier temporaire
openssl enc -d -aes-256-cbc -pbkdf2 -salt -in "$FICHIER_ENC" -out "$TMPFILE" -pass pass:"$MDP" 2>/dev/null

# V√©rifie si le d√©chiffrement a r√©ussi
if [ $? -ne 0 ]; then
    echo "Mot de passe incorrect"
    rm -f "$TMPFILE"
    exit 1
fi

# Rechiffre imm√©diatement le fichier pour √©viter les modifications non autoris√©es
openssl enc -aes-256-cbc -pbkdf2 -salt -in "$TMPFILE" -out "$FICHIER_ENC" -pass pass:"$MDP"
shred -u "$TMPFILE"  # Supprime le fichier temporaire de mani√®re s√©curis√©e

echo "Fichier mis √† jour et rechiffr√© avec succ√®s."

# === MENU ===
# Affiche le menu principal
while true; do 
    echo
    echo -e "\e[1m=== [üîë] Gestionnaire de mot de passe ===\e[0m"
    echo
    echo "1. [‚ûï] Ajouter un mot de passe"
    echo
    echo "2. [üìñ] Consulter mot de passe"
    echo
    echo "3. [‚úèÔ∏è] Modification d'un/des mot(s) de passe"
    echo
    echo "4. [üóëÔ∏è] Delete mot de passe"
    echo
    echo "5. [üö™] Quitter"
    echo
    read -p "üìã Entrez votre choix : " choice
    echo
    echo

    case "$choice" in
    1)
        # Ajouter un nouveau mot de passe
        echo -e "\e[1m=== [‚ûï] Ajouter un nouveau mot de passe ===\e[0m"        
        read -p "üíª Outil/logiciel/site : " id_logiciel
        read -p "üìß Adresse mail / nom utilisateur : " id
        read -s -p "üîí Mot de passe : " pwd
        echo

        # D√©chiffrer temporairement le fichier pour ajouter le mot de passe
        openssl enc -d -aes-256-cbc -pbkdf2 -salt -in "$FICHIER_ENC" -out "$TMPFILE" -pass pass:"$MDP" 2>/dev/null
        if [ $? -ne 0 ]; then
            echo "[‚ùå] Erreur : Impossible de d√©chiffrer le fichier. Mot de passe ma√Ætre incorrect ou fichier corrompu."
            exit 1
        fi

        # Ajouter les nouvelles donn√©es au fichier temporaire
        echo "$id_logiciel : $id -> $pwd" >> "$TMPFILE"

        # Rechiffrer le fichier apr√®s modification
        openssl enc -aes-256-cbc -pbkdf2 -salt -in "$TMPFILE" -out "$FICHIER_ENC" -pass pass:"$MDP"

        # Supprimer le fichier temporaire pour des raisons de s√©curit√©
        shred -u "$TMPFILE"
        
        echo
        echo "[‚úÖ] Mot de passe ajout√©."
        ;;
    2)
        # Consulter les mots de passe
        echo -e "\e[1m=== [üìñ] Consulter un mot de passe ===\e[0m"
        echo
        openssl enc -d -aes-256-cbc -pbkdf2 -salt -in "$FICHIER_ENC" -out "$TMPFILE" -pass pass:"$MDP" 2>/dev/null
        if [ $? -ne 0 ]; then
            echo "[‚ùå] Erreur : Impossible de d√©chiffrer le fichier. Mot de passe ma√Ætre incorrect ou fichier corrompu."
            exit 1
        fi

        if [ -s "$TMPFILE" ]; then
            cat "$TMPFILE"  # Affiche le contenu du fichier temporaire
        else
            echo "[‚ÑπÔ∏è] Aucun mot de passe enregistr√©."
        fi

        openssl enc -aes-256-cbc -pbkdf2 -salt -in "$TMPFILE" -out "$FICHIER_ENC" -pass pass:"$MDP"

        # Supprimer le fichier temporaire pour des raisons de s√©curit√©
        shred -u "$TMPFILE"

        
        ;;
    3)
        echo -e "\e[1m=== [‚úèÔ∏è] Modifier un mot de passe ===\e[0m"
        echo
        # D√©chiffrer temporairement le fichier pour modification
        openssl enc -d -aes-256-cbc -pbkdf2 -salt -in "$FICHIER_ENC" -out "$TMPFILE" -pass pass:"$MDP" 2>/dev/null
        if [ $? -ne 0 ]; then
            echo "[‚ùå] Erreur : Impossible de d√©chiffrer le fichier. Mot de passe ma√Ætre incorrect ou fichier corrompu."
            exit 1
        fi

        # Afficher les entr√©es existantes
        echo "=== [üìñ] Liste des mots de passe ==="
        cat -n "$TMPFILE"
        echo

        # Demander √† l'utilisateur quelle ligne modifier
        read -p "Entrez le num√©ro de la ligne √† modifier : " line_number
        if ! [[ "$line_number" =~ ^[0-9]+$ ]]; then
            echo "[‚ùå] Entr√©e invalide. Veuillez entrer un num√©ro de ligne valide."
            shred -u "$TMPFILE"
            exit 1
        fi

        # Modifier la ligne sp√©cifi√©e
        sed -i "${line_number}s/.*/$new_id_logiciel : $new_id -> $new_pwd/" "$TMPFILE"

        # Rechiffrer le fichier apr√®s modification
        openssl enc -aes-256-cbc -pbkdf2 -salt -in "$TMPFILE" -out "$FICHIER_ENC" -pass pass:"$MDP"

        # Supprimer le fichier temporaire pour des raisons de s√©curit√©
        shred -u "$TMPFILE"

        echo
        echo "[‚úÖ] Mot de passe modifi√© avec succ√®s."
        ;;

    4)
        echo -e "\e[1m=== [üóëÔ∏è] Supprimer un mot de passe ===\e[0m"
        echo

        openssl enc -d -aes-256-cbc -pbkdf2 -salt -in "$FICHIER_ENC" -out "$TMPFILE" -pass pass:"$MDP" 2>/dev/null

        if [ $? -ne 0 ]; then
            echo "[‚ùå] Erreur : Impossible de d√©chiffrer le fichier."
            exit 1
        fi

        # Affiche le contenu avec num√©ro de ligne
        echo "[üìÑ] Liste des entr√©es enregistr√©es :"
        nl -w2 -s". " "$TMPFILE"

        echo
        read -p "[‚ùì] Entrez le num√©ro de la ligne √† supprimer : " ligne

        # V√©rifie que le num√©ro est bien un entier positif
        if ! [[ "$ligne" =~ ^[0-9]+$ ]]; then
            echo "[‚ö†Ô∏è] Num√©ro invalide."
            shred -u "$TMPFILE"
            continue
        fi

        # Supprime la ligne choisie
        sed -i "${ligne}d" "$TMPFILE"

        # Rechiffre
        openssl enc -aes-256-cbc -pbkdf2 -salt -in "$TMPFILE" -out "$FICHIER_ENC" -pass pass:"$MDP"
        shred -u "$TMPFILE"

        echo "[‚úÖ] Entr√©e supprim√©e avec succ√®s."
        ;;
    
	5)
            read -p "\e[1m[‚ùì] √ätes-vous s√ªr de vouloir quitter ? (o/n) :\e[0m" confirm    			
            if [[ "$confirm" =~ ^[oO]$ ]]; then
       				echo "[üëã] Au revoir !"
        			exit 0
    			else
        			echo "[üîÑ] Retour au menu."
    			fi
   		 ;;
	esac
done